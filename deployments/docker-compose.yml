version: "3"

services:
  springfield-bank-api:
    container_name: "go-springfield-bank"
    build:
      context: ..
      dockerfile: build/Dockerfile
    restart: unless-stopped
    environment:
      "LOG_ENCODING": json # json, console; default: json
      "LOG_LEVEL": info # trace, debug, info, warn, error, fatal, panic; default: info
      "API_HTTP_PORT": 8080 # default: 8080
      "MONITORING_PORT": 8086 # default: 8086
      "DB_HOST": postgres # default: localhost
      "DB_PORT": 5432 # default: 5432
      "DB_NAME": springfield-bank
      "DB_USER": postgres
      "DB_PASSWORD": postgres
      "DB_SSL_MODE": prefer # default: prefer
      "DB_POOL_MAX_CONN": 5 # default: 5
      "DB_POOL_MAX_CONN_LIFETIME": 5m # default: 5m
      "DB_MIGRATE": "true" # default: true
      "AUTH_SECRET_KEY": "CHANGE-IT" # default: YOU-SHOULD-CHANGE-ME
      "AUTH_ACCESS_TOKEN_DURATION": 15m # default: 15m
    ports:
      - 8080:8080
      - 8086:8086
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/live" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: "postgres:12-alpine"
    command: ["postgres", "-c", "log_statement=all"]
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: springfield-bank
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: